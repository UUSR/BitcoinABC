using System;
using System.Collections.Generic;
using System.Linq;

namespace BitcoinABC.Internal.Secp256K1
{
    internal class Scalar
    {
        private const uint N0 = 3493216577;
        private const uint N1 = 3218235020;
        private const uint N2 = 2940772411;
        private const uint N3 = 3132021990;
        private const uint N4 = 4294967294;
        private const uint N5 = 4294967295;
        private const uint N6 = 4294967295;
        private const uint N7 = 4294967295;
        private const uint NC0 = 801750719;
        private const uint NC1 = 1076732275;
        private const uint NC2 = 1354194884;
        private const uint NC3 = 1162945305;
        private const uint NC4 = 1;
        private const uint NH0 = 1746608288;
        private const uint NH1 = 3756601158;
        private const uint NH2 = 1470386205;
        private const uint NH3 = 1566010995;
        private const uint NH4 = 4294967295;
        private const uint NH5 = 4294967295;
        private const uint NH6 = 4294967295;
        private const uint NH7 = 2147483647;
        public readonly uint[] D;

        public Scalar()
        {
            this.D = new uint[8];
        }

        public Scalar(uint[] arr)
        {
            this.D = arr;
        }

        public Scalar(Scalar other)
        {
            this.D = new uint[other.D.Length];
            Array.Copy((Array)other.D, (Array)this.D, other.D.Length);
        }

        public Scalar Clone()
        {
            return new Scalar(this);
        }

        public static bool IsZero(Scalar r)
        {
            return ((IEnumerable<uint>)r.D).All<uint>((Func<uint, bool>)(t => (int)t == 0));
        }

        public static void Mul(Scalar r, Scalar a, Scalar b)
        {
            var l = new uint[16];
            Scalar.Mul512(l, a, b);
            Scalar.Reduce512(r, l);
        }

        public static bool Add(Scalar r, Scalar a, Scalar b)
        {
            var num1 = (ulong)a.D[0] + (ulong)b.D[0];
            r.D[0] = (uint)(num1 & (ulong)uint.MaxValue);
            var num2 = (num1 >> 32) + ((ulong)a.D[1] + (ulong)b.D[1]);
            r.D[1] = (uint)(num2 & (ulong)uint.MaxValue);
            var num3 = (num2 >> 32) + ((ulong)a.D[2] + (ulong)b.D[2]);
            r.D[2] = (uint)(num3 & (ulong)uint.MaxValue);
            var num4 = (num3 >> 32) + ((ulong)a.D[3] + (ulong)b.D[3]);
            r.D[3] = (uint)(num4 & (ulong)uint.MaxValue);
            var num5 = (num4 >> 32) + ((ulong)a.D[4] + (ulong)b.D[4]);
            r.D[4] = (uint)(num5 & (ulong)uint.MaxValue);
            var num6 = (num5 >> 32) + ((ulong)a.D[5] + (ulong)b.D[5]);
            r.D[5] = (uint)(num6 & (ulong)uint.MaxValue);
            var num7 = (num6 >> 32) + ((ulong)a.D[6] + (ulong)b.D[6]);
            r.D[6] = (uint)(num7 & (ulong)uint.MaxValue);
            var num8 = (num7 >> 32) + ((ulong)a.D[7] + (ulong)b.D[7]);
            r.D[7] = (uint)(num8 & (ulong)uint.MaxValue);
            var isOverflow = num8 >> 32 > 0UL || Scalar.CheckOverflow(r);
            Scalar.Reduce(r, isOverflow);
            return isOverflow;
        }

        private static void Mul512(uint[] l, Scalar a, Scalar b)
        {
            uint num1 = 0;
            uint num2 = 0;
            var num3 = 0;
            var num4 = (long)a.D[0] * (long)b.D[0];
            var num5 = (uint)((ulong)num4 >> 32);
            var num6 = (uint)num4;
            var num7 = num1 + num6;
            var num8 = num5 + (num7 < num6 ? 1U : 0U);
            var num9 = num2 + num8;
            l[0] = num7;
            var num10 = num9;
            uint num11 = 0;
            var num12 = (long)a.D[0] * (long)b.D[1];
            var num13 = (uint)((ulong)num12 >> 32);
            var num14 = (uint)num12;
            var num15 = num10 + num14;
            var num16 = num13 + (num15 < num14 ? 1U : 0U);
            var num17 = num11 + num16;
            var num18 = num17 < num16 ? 1 : 0;
            var num19 = num3 + num18;
            var num20 = (long)a.D[1] * (long)b.D[0];
            var num21 = (uint)((ulong)num20 >> 32);
            var num22 = (uint)num20;
            var num23 = num15 + num22;
            var num24 = num21 + (num23 < num22 ? 1U : 0U);
            var num25 = num17 + num24;
            var num26 = num25 < num24 ? 1 : 0;
            var num27 = num19 + num26;
            l[1] = num23;
            var num28 = num25;
            var num29 = (uint)num27;
            var num30 = 0;
            var num31 = (long)a.D[0] * (long)b.D[2];
            var num32 = (uint)((ulong)num31 >> 32);
            var num33 = (uint)num31;
            var num34 = num28 + num33;
            var num35 = num32 + (num34 < num33 ? 1U : 0U);
            var num36 = num29 + num35;
            var num37 = num36 < num35 ? 1 : 0;
            var num38 = num30 + num37;
            var num39 = (long)a.D[1] * (long)b.D[1];
            var num40 = (uint)((ulong)num39 >> 32);
            var num41 = (uint)num39;
            var num42 = num34 + num41;
            var num43 = num40 + (num42 < num41 ? 1U : 0U);
            var num44 = num36 + num43;
            var num45 = num44 < num43 ? 1 : 0;
            var num46 = num38 + num45;
            var num47 = (long)a.D[2] * (long)b.D[0];
            var num48 = (uint)((ulong)num47 >> 32);
            var num49 = (uint)num47;
            var num50 = num42 + num49;
            var num51 = num48 + (num50 < num49 ? 1U : 0U);
            var num52 = num44 + num51;
            var num53 = num52 < num51 ? 1 : 0;
            var num54 = num46 + num53;
            l[2] = num50;
            var num55 = num52;
            var num56 = (uint)num54;
            var num57 = 0;
            var num58 = (long)a.D[0] * (long)b.D[3];
            var num59 = (uint)((ulong)num58 >> 32);
            var num60 = (uint)num58;
            var num61 = num55 + num60;
            var num62 = num59 + (num61 < num60 ? 1U : 0U);
            var num63 = num56 + num62;
            var num64 = num63 < num62 ? 1 : 0;
            var num65 = num57 + num64;
            var num66 = (long)a.D[1] * (long)b.D[2];
            var num67 = (uint)((ulong)num66 >> 32);
            var num68 = (uint)num66;
            var num69 = num61 + num68;
            var num70 = num67 + (num69 < num68 ? 1U : 0U);
            var num71 = num63 + num70;
            var num72 = num71 < num70 ? 1 : 0;
            var num73 = num65 + num72;
            var num74 = (long)a.D[2] * (long)b.D[1];
            var num75 = (uint)((ulong)num74 >> 32);
            var num76 = (uint)num74;
            var num77 = num69 + num76;
            var num78 = num75 + (num77 < num76 ? 1U : 0U);
            var num79 = num71 + num78;
            var num80 = num79 < num78 ? 1 : 0;
            var num81 = num73 + num80;
            var num82 = (long)a.D[3] * (long)b.D[0];
            var num83 = (uint)((ulong)num82 >> 32);
            var num84 = (uint)num82;
            var num85 = num77 + num84;
            var num86 = num83 + (num85 < num84 ? 1U : 0U);
            var num87 = num79 + num86;
            var num88 = num87 < num86 ? 1 : 0;
            var num89 = num81 + num88;
            l[3] = num85;
            var num90 = num87;
            var num91 = (uint)num89;
            var num92 = 0;
            var num93 = (long)a.D[0] * (long)b.D[4];
            var num94 = (uint)((ulong)num93 >> 32);
            var num95 = (uint)num93;
            var num96 = num90 + num95;
            var num97 = num94 + (num96 < num95 ? 1U : 0U);
            var num98 = num91 + num97;
            var num99 = num98 < num97 ? 1 : 0;
            var num100 = num92 + num99;
            var num101 = (long)a.D[1] * (long)b.D[3];
            var num102 = (uint)((ulong)num101 >> 32);
            var num103 = (uint)num101;
            var num104 = num96 + num103;
            var num105 = num102 + (num104 < num103 ? 1U : 0U);
            var num106 = num98 + num105;
            var num107 = num106 < num105 ? 1 : 0;
            var num108 = num100 + num107;
            var num109 = (long)a.D[2] * (long)b.D[2];
            var num110 = (uint)((ulong)num109 >> 32);
            var num111 = (uint)num109;
            var num112 = num104 + num111;
            var num113 = num110 + (num112 < num111 ? 1U : 0U);
            var num114 = num106 + num113;
            var num115 = num114 < num113 ? 1 : 0;
            var num116 = num108 + num115;
            var num117 = (long)a.D[3] * (long)b.D[1];
            var num118 = (uint)((ulong)num117 >> 32);
            var num119 = (uint)num117;
            var num120 = num112 + num119;
            var num121 = num118 + (num120 < num119 ? 1U : 0U);
            var num122 = num114 + num121;
            var num123 = num122 < num121 ? 1 : 0;
            var num124 = num116 + num123;
            var num125 = (long)a.D[4] * (long)b.D[0];
            var num126 = (uint)((ulong)num125 >> 32);
            var num127 = (uint)num125;
            var num128 = num120 + num127;
            var num129 = num126 + (num128 < num127 ? 1U : 0U);
            var num130 = num122 + num129;
            var num131 = num130 < num129 ? 1 : 0;
            var num132 = num124 + num131;
            l[4] = num128;
            var num133 = num130;
            var num134 = (uint)num132;
            var num135 = 0;
            var num136 = (long)a.D[0] * (long)b.D[5];
            var num137 = (uint)((ulong)num136 >> 32);
            var num138 = (uint)num136;
            var num139 = num133 + num138;
            var num140 = num137 + (num139 < num138 ? 1U : 0U);
            var num141 = num134 + num140;
            var num142 = num141 < num140 ? 1 : 0;
            var num143 = num135 + num142;
            var num144 = (long)a.D[1] * (long)b.D[4];
            var num145 = (uint)((ulong)num144 >> 32);
            var num146 = (uint)num144;
            var num147 = num139 + num146;
            var num148 = num145 + (num147 < num146 ? 1U : 0U);
            var num149 = num141 + num148;
            var num150 = num149 < num148 ? 1 : 0;
            var num151 = num143 + num150;
            var num152 = (long)a.D[2] * (long)b.D[3];
            var num153 = (uint)((ulong)num152 >> 32);
            var num154 = (uint)num152;
            var num155 = num147 + num154;
            var num156 = num153 + (num155 < num154 ? 1U : 0U);
            var num157 = num149 + num156;
            var num158 = num157 < num156 ? 1 : 0;
            var num159 = num151 + num158;
            var num160 = (long)a.D[3] * (long)b.D[2];
            var num161 = (uint)((ulong)num160 >> 32);
            var num162 = (uint)num160;
            var num163 = num155 + num162;
            var num164 = num161 + (num163 < num162 ? 1U : 0U);
            var num165 = num157 + num164;
            var num166 = num165 < num164 ? 1 : 0;
            var num167 = num159 + num166;
            var num168 = (long)a.D[4] * (long)b.D[1];
            var num169 = (uint)((ulong)num168 >> 32);
            var num170 = (uint)num168;
            var num171 = num163 + num170;
            var num172 = num169 + (num171 < num170 ? 1U : 0U);
            var num173 = num165 + num172;
            var num174 = num173 < num172 ? 1 : 0;
            var num175 = num167 + num174;
            var num176 = (long)a.D[5] * (long)b.D[0];
            var num177 = (uint)((ulong)num176 >> 32);
            var num178 = (uint)num176;
            var num179 = num171 + num178;
            var num180 = num177 + (num179 < num178 ? 1U : 0U);
            var num181 = num173 + num180;
            var num182 = num181 < num180 ? 1 : 0;
            var num183 = num175 + num182;
            l[5] = num179;
            var num184 = num181;
            var num185 = (uint)num183;
            var num186 = 0;
            var num187 = (long)a.D[0] * (long)b.D[6];
            var num188 = (uint)((ulong)num187 >> 32);
            var num189 = (uint)num187;
            var num190 = num184 + num189;
            var num191 = num188 + (num190 < num189 ? 1U : 0U);
            var num192 = num185 + num191;
            var num193 = num192 < num191 ? 1 : 0;
            var num194 = num186 + num193;
            var num195 = (long)a.D[1] * (long)b.D[5];
            var num196 = (uint)((ulong)num195 >> 32);
            var num197 = (uint)num195;
            var num198 = num190 + num197;
            var num199 = num196 + (num198 < num197 ? 1U : 0U);
            var num200 = num192 + num199;
            var num201 = num200 < num199 ? 1 : 0;
            var num202 = num194 + num201;
            var num203 = (long)a.D[2] * (long)b.D[4];
            var num204 = (uint)((ulong)num203 >> 32);
            var num205 = (uint)num203;
            var num206 = num198 + num205;
            var num207 = num204 + (num206 < num205 ? 1U : 0U);
            var num208 = num200 + num207;
            var num209 = num208 < num207 ? 1 : 0;
            var num210 = num202 + num209;
            var num211 = (long)a.D[3] * (long)b.D[3];
            var num212 = (uint)((ulong)num211 >> 32);
            var num213 = (uint)num211;
            var num214 = num206 + num213;
            var num215 = num212 + (num214 < num213 ? 1U : 0U);
            var num216 = num208 + num215;
            var num217 = num216 < num215 ? 1 : 0;
            var num218 = num210 + num217;
            var num219 = (long)a.D[4] * (long)b.D[2];
            var num220 = (uint)((ulong)num219 >> 32);
            var num221 = (uint)num219;
            var num222 = num214 + num221;
            var num223 = num220 + (num222 < num221 ? 1U : 0U);
            var num224 = num216 + num223;
            var num225 = num224 < num223 ? 1 : 0;
            var num226 = num218 + num225;
            var num227 = (long)a.D[5] * (long)b.D[1];
            var num228 = (uint)((ulong)num227 >> 32);
            var num229 = (uint)num227;
            var num230 = num222 + num229;
            var num231 = num228 + (num230 < num229 ? 1U : 0U);
            var num232 = num224 + num231;
            var num233 = num232 < num231 ? 1 : 0;
            var num234 = num226 + num233;
            var num235 = (long)a.D[6] * (long)b.D[0];
            var num236 = (uint)((ulong)num235 >> 32);
            var num237 = (uint)num235;
            var num238 = num230 + num237;
            var num239 = num236 + (num238 < num237 ? 1U : 0U);
            var num240 = num232 + num239;
            var num241 = num240 < num239 ? 1 : 0;
            var num242 = num234 + num241;
            l[6] = num238;
            var num243 = num240;
            var num244 = (uint)num242;
            var num245 = 0;
            var num246 = (long)a.D[0] * (long)b.D[7];
            var num247 = (uint)((ulong)num246 >> 32);
            var num248 = (uint)num246;
            var num249 = num243 + num248;
            var num250 = num247 + (num249 < num248 ? 1U : 0U);
            var num251 = num244 + num250;
            var num252 = num251 < num250 ? 1 : 0;
            var num253 = num245 + num252;
            var num254 = (long)a.D[1] * (long)b.D[6];
            var num255 = (uint)((ulong)num254 >> 32);
            var num256 = (uint)num254;
            var num257 = num249 + num256;
            var num258 = num255 + (num257 < num256 ? 1U : 0U);
            var num259 = num251 + num258;
            var num260 = num259 < num258 ? 1 : 0;
            var num261 = num253 + num260;
            var num262 = (long)a.D[2] * (long)b.D[5];
            var num263 = (uint)((ulong)num262 >> 32);
            var num264 = (uint)num262;
            var num265 = num257 + num264;
            var num266 = num263 + (num265 < num264 ? 1U : 0U);
            var num267 = num259 + num266;
            var num268 = num267 < num266 ? 1 : 0;
            var num269 = num261 + num268;
            var num270 = (long)a.D[3] * (long)b.D[4];
            var num271 = (uint)((ulong)num270 >> 32);
            var num272 = (uint)num270;
            var num273 = num265 + num272;
            var num274 = num271 + (num273 < num272 ? 1U : 0U);
            var num275 = num267 + num274;
            var num276 = num275 < num274 ? 1 : 0;
            var num277 = num269 + num276;
            var num278 = (long)a.D[4] * (long)b.D[3];
            var num279 = (uint)((ulong)num278 >> 32);
            var num280 = (uint)num278;
            var num281 = num273 + num280;
            var num282 = num279 + (num281 < num280 ? 1U : 0U);
            var num283 = num275 + num282;
            var num284 = num283 < num282 ? 1 : 0;
            var num285 = num277 + num284;
            var num286 = (long)a.D[5] * (long)b.D[2];
            var num287 = (uint)((ulong)num286 >> 32);
            var num288 = (uint)num286;
            var num289 = num281 + num288;
            var num290 = num287 + (num289 < num288 ? 1U : 0U);
            var num291 = num283 + num290;
            var num292 = num291 < num290 ? 1 : 0;
            var num293 = num285 + num292;
            var num294 = (long)a.D[6] * (long)b.D[1];
            var num295 = (uint)((ulong)num294 >> 32);
            var num296 = (uint)num294;
            var num297 = num289 + num296;
            var num298 = num295 + (num297 < num296 ? 1U : 0U);
            var num299 = num291 + num298;
            var num300 = num299 < num298 ? 1 : 0;
            var num301 = num293 + num300;
            var num302 = (long)a.D[7] * (long)b.D[0];
            var num303 = (uint)((ulong)num302 >> 32);
            var num304 = (uint)num302;
            var num305 = num297 + num304;
            var num306 = num303 + (num305 < num304 ? 1U : 0U);
            var num307 = num299 + num306;
            var num308 = num307 < num306 ? 1 : 0;
            var num309 = num301 + num308;
            l[7] = num305;
            var num310 = num307;
            var num311 = (uint)num309;
            var num312 = 0;
            var num313 = (long)a.D[1] * (long)b.D[7];
            var num314 = (uint)((ulong)num313 >> 32);
            var num315 = (uint)num313;
            var num316 = num310 + num315;
            var num317 = num314 + (num316 < num315 ? 1U : 0U);
            var num318 = num311 + num317;
            var num319 = num318 < num317 ? 1 : 0;
            var num320 = num312 + num319;
            var num321 = (long)a.D[2] * (long)b.D[6];
            var num322 = (uint)((ulong)num321 >> 32);
            var num323 = (uint)num321;
            var num324 = num316 + num323;
            var num325 = num322 + (num324 < num323 ? 1U : 0U);
            var num326 = num318 + num325;
            var num327 = num326 < num325 ? 1 : 0;
            var num328 = num320 + num327;
            var num329 = (long)a.D[3] * (long)b.D[5];
            var num330 = (uint)((ulong)num329 >> 32);
            var num331 = (uint)num329;
            var num332 = num324 + num331;
            var num333 = num330 + (num332 < num331 ? 1U : 0U);
            var num334 = num326 + num333;
            var num335 = num334 < num333 ? 1 : 0;
            var num336 = num328 + num335;
            var num337 = (long)a.D[4] * (long)b.D[4];
            var num338 = (uint)((ulong)num337 >> 32);
            var num339 = (uint)num337;
            var num340 = num332 + num339;
            var num341 = num338 + (num340 < num339 ? 1U : 0U);
            var num342 = num334 + num341;
            var num343 = num342 < num341 ? 1 : 0;
            var num344 = num336 + num343;
            var num345 = (long)a.D[5] * (long)b.D[3];
            var num346 = (uint)((ulong)num345 >> 32);
            var num347 = (uint)num345;
            var num348 = num340 + num347;
            var num349 = num346 + (num348 < num347 ? 1U : 0U);
            var num350 = num342 + num349;
            var num351 = num350 < num349 ? 1 : 0;
            var num352 = num344 + num351;
            var num353 = (long)a.D[6] * (long)b.D[2];
            var num354 = (uint)((ulong)num353 >> 32);
            var num355 = (uint)num353;
            var num356 = num348 + num355;
            var num357 = num354 + (num356 < num355 ? 1U : 0U);
            var num358 = num350 + num357;
            var num359 = num358 < num357 ? 1 : 0;
            var num360 = num352 + num359;
            var num361 = (long)a.D[7] * (long)b.D[1];
            var num362 = (uint)((ulong)num361 >> 32);
            var num363 = (uint)num361;
            var num364 = num356 + num363;
            var num365 = num362 + (num364 < num363 ? 1U : 0U);
            var num366 = num358 + num365;
            var num367 = num366 < num365 ? 1 : 0;
            var num368 = num360 + num367;
            l[8] = num364;
            var num369 = num366;
            var num370 = (uint)num368;
            var num371 = 0;
            var num372 = (long)a.D[2] * (long)b.D[7];
            var num373 = (uint)((ulong)num372 >> 32);
            var num374 = (uint)num372;
            var num375 = num369 + num374;
            var num376 = num373 + (num375 < num374 ? 1U : 0U);
            var num377 = num370 + num376;
            var num378 = num377 < num376 ? 1 : 0;
            var num379 = num371 + num378;
            var num380 = (long)a.D[3] * (long)b.D[6];
            var num381 = (uint)((ulong)num380 >> 32);
            var num382 = (uint)num380;
            var num383 = num375 + num382;
            var num384 = num381 + (num383 < num382 ? 1U : 0U);
            var num385 = num377 + num384;
            var num386 = num385 < num384 ? 1 : 0;
            var num387 = num379 + num386;
            var num388 = (long)a.D[4] * (long)b.D[5];
            var num389 = (uint)((ulong)num388 >> 32);
            var num390 = (uint)num388;
            var num391 = num383 + num390;
            var num392 = num389 + (num391 < num390 ? 1U : 0U);
            var num393 = num385 + num392;
            var num394 = num393 < num392 ? 1 : 0;
            var num395 = num387 + num394;
            var num396 = (long)a.D[5] * (long)b.D[4];
            var num397 = (uint)((ulong)num396 >> 32);
            var num398 = (uint)num396;
            var num399 = num391 + num398;
            var num400 = num397 + (num399 < num398 ? 1U : 0U);
            var num401 = num393 + num400;
            var num402 = num401 < num400 ? 1 : 0;
            var num403 = num395 + num402;
            var num404 = (long)a.D[6] * (long)b.D[3];
            var num405 = (uint)((ulong)num404 >> 32);
            var num406 = (uint)num404;
            var num407 = num399 + num406;
            var num408 = num405 + (num407 < num406 ? 1U : 0U);
            var num409 = num401 + num408;
            var num410 = num409 < num408 ? 1 : 0;
            var num411 = num403 + num410;
            var num412 = (long)a.D[7] * (long)b.D[2];
            var num413 = (uint)((ulong)num412 >> 32);
            var num414 = (uint)num412;
            var num415 = num407 + num414;
            var num416 = num413 + (num415 < num414 ? 1U : 0U);
            var num417 = num409 + num416;
            var num418 = num417 < num416 ? 1 : 0;
            var num419 = num411 + num418;
            l[9] = num415;
            var num420 = num417;
            var num421 = (uint)num419;
            var num422 = 0;
            var num423 = (long)a.D[3] * (long)b.D[7];
            var num424 = (uint)((ulong)num423 >> 32);
            var num425 = (uint)num423;
            var num426 = num420 + num425;
            var num427 = num424 + (num426 < num425 ? 1U : 0U);
            var num428 = num421 + num427;
            var num429 = num428 < num427 ? 1 : 0;
            var num430 = num422 + num429;
            var num431 = (long)a.D[4] * (long)b.D[6];
            var num432 = (uint)((ulong)num431 >> 32);
            var num433 = (uint)num431;
            var num434 = num426 + num433;
            var num435 = num432 + (num434 < num433 ? 1U : 0U);
            var num436 = num428 + num435;
            var num437 = num436 < num435 ? 1 : 0;
            var num438 = num430 + num437;
            var num439 = (long)a.D[5] * (long)b.D[5];
            var num440 = (uint)((ulong)num439 >> 32);
            var num441 = (uint)num439;
            var num442 = num434 + num441;
            var num443 = num440 + (num442 < num441 ? 1U : 0U);
            var num444 = num436 + num443;
            var num445 = num444 < num443 ? 1 : 0;
            var num446 = num438 + num445;
            var num447 = (long)a.D[6] * (long)b.D[4];
            var num448 = (uint)((ulong)num447 >> 32);
            var num449 = (uint)num447;
            var num450 = num442 + num449;
            var num451 = num448 + (num450 < num449 ? 1U : 0U);
            var num452 = num444 + num451;
            var num453 = num452 < num451 ? 1 : 0;
            var num454 = num446 + num453;
            var num455 = (long)a.D[7] * (long)b.D[3];
            var num456 = (uint)((ulong)num455 >> 32);
            var num457 = (uint)num455;
            var num458 = num450 + num457;
            var num459 = num456 + (num458 < num457 ? 1U : 0U);
            var num460 = num452 + num459;
            var num461 = num460 < num459 ? 1 : 0;
            var num462 = num454 + num461;
            l[10] = num458;
            var num463 = num460;
            var num464 = (uint)num462;
            var num465 = 0;
            var num466 = (long)a.D[4] * (long)b.D[7];
            var num467 = (uint)((ulong)num466 >> 32);
            var num468 = (uint)num466;
            var num469 = num463 + num468;
            var num470 = num467 + (num469 < num468 ? 1U : 0U);
            var num471 = num464 + num470;
            var num472 = num471 < num470 ? 1 : 0;
            var num473 = num465 + num472;
            var num474 = (long)a.D[5] * (long)b.D[6];
            var num475 = (uint)((ulong)num474 >> 32);
            var num476 = (uint)num474;
            var num477 = num469 + num476;
            var num478 = num475 + (num477 < num476 ? 1U : 0U);
            var num479 = num471 + num478;
            var num480 = num479 < num478 ? 1 : 0;
            var num481 = num473 + num480;
            var num482 = (long)a.D[6] * (long)b.D[5];
            var num483 = (uint)((ulong)num482 >> 32);
            var num484 = (uint)num482;
            var num485 = num477 + num484;
            var num486 = num483 + (num485 < num484 ? 1U : 0U);
            var num487 = num479 + num486;
            var num488 = num487 < num486 ? 1 : 0;
            var num489 = num481 + num488;
            var num490 = (long)a.D[7] * (long)b.D[4];
            var num491 = (uint)((ulong)num490 >> 32);
            var num492 = (uint)num490;
            var num493 = num485 + num492;
            var num494 = num491 + (num493 < num492 ? 1U : 0U);
            var num495 = num487 + num494;
            var num496 = num495 < num494 ? 1 : 0;
            var num497 = num489 + num496;
            l[11] = num493;
            var num498 = num495;
            var num499 = (uint)num497;
            var num500 = 0;
            var num501 = (long)a.D[5] * (long)b.D[7];
            var num502 = (uint)((ulong)num501 >> 32);
            var num503 = (uint)num501;
            var num504 = num498 + num503;
            var num505 = num502 + (num504 < num503 ? 1U : 0U);
            var num506 = num499 + num505;
            var num507 = num506 < num505 ? 1 : 0;
            var num508 = num500 + num507;
            var num509 = (long)a.D[6] * (long)b.D[6];
            var num510 = (uint)((ulong)num509 >> 32);
            var num511 = (uint)num509;
            var num512 = num504 + num511;
            var num513 = num510 + (num512 < num511 ? 1U : 0U);
            var num514 = num506 + num513;
            var num515 = num514 < num513 ? 1 : 0;
            var num516 = num508 + num515;
            var num517 = (long)a.D[7] * (long)b.D[5];
            var num518 = (uint)((ulong)num517 >> 32);
            var num519 = (uint)num517;
            var num520 = num512 + num519;
            var num521 = num518 + (num520 < num519 ? 1U : 0U);
            var num522 = num514 + num521;
            var num523 = num522 < num521 ? 1 : 0;
            var num524 = num516 + num523;
            l[12] = num520;
            var num525 = num522;
            var num526 = (uint)num524;
            var num527 = 0;
            var num528 = (long)a.D[6] * (long)b.D[7];
            var num529 = (uint)((ulong)num528 >> 32);
            var num530 = (uint)num528;
            var num531 = num525 + num530;
            var num532 = num529 + (num531 < num530 ? 1U : 0U);
            var num533 = num526 + num532;
            var num534 = num533 < num532 ? 1 : 0;
            var num535 = num527 + num534;
            var num536 = (long)a.D[7] * (long)b.D[6];
            var num537 = (uint)((ulong)num536 >> 32);
            var num538 = (uint)num536;
            var num539 = num531 + num538;
            var num540 = num537 + (num539 < num538 ? 1U : 0U);
            var num541 = num533 + num540;
            var num542 = num541 < num540 ? 1 : 0;
            var num543 = num535 + num542;
            l[13] = num539;
            var num544 = num541;
            var num545 = (uint)num543;
            var num546 = (long)a.D[7] * (long)b.D[7];
            var num547 = (uint)((ulong)num546 >> 32);
            var num548 = (uint)num546;
            var num549 = num544 + num548;
            var num550 = num547 + (num549 < num548 ? 1U : 0U);
            var num551 = num545 + num550;
            l[14] = num549;
            var num552 = num551;
            l[15] = num552;
        }

        private static void Reduce512(Scalar r, uint[] l)
        {
            var num1 = l[8];
            var num2 = l[9];
            var num3 = l[10];
            var num4 = l[11];
            var num5 = l[12];
            var num6 = l[13];
            var num7 = l[14];
            var num8 = l[15];
            var num9 = l[0];
            uint num10 = 0;
            var num11 = 0;
            var num12 = (long)num1 * 801750719L;
            var num13 = (uint)((ulong)num12 >> 32);
            var num14 = (uint)num12;
            var num15 = num9 + num14;
            var num16 = num13 + (num15 < num14 ? 1U : 0U);
            var num17 = num10 + num16;
            var num18 = num15;
            var num19 = num17;
            uint num20 = 0;
            var num21 = num19 + l[1];
            var num22 = num20 + (num21 < l[1] ? 1U : 0U);
            var num23 = (long)num2 * 801750719L;
            var num24 = (uint)((ulong)num23 >> 32);
            var num25 = (uint)num23;
            var num26 = num21 + num25;
            var num27 = num24 + (num26 < num25 ? 1U : 0U);
            var num28 = num22 + num27;
            var num29 = num28 < num27 ? 1 : 0;
            var num30 = num11 + num29;
            var num31 = (long)num1 * 1076732275L;
            var num32 = (uint)((ulong)num31 >> 32);
            var num33 = (uint)num31;
            var num34 = num26 + num33;
            var num35 = num32 + (num34 < num33 ? 1U : 0U);
            var num36 = num28 + num35;
            var num37 = num36 < num35 ? 1 : 0;
            var num38 = num30 + num37;
            var num39 = num34;
            var num40 = num36;
            var num41 = (uint)num38;
            var num42 = 0;
            var num43 = num40 + l[2];
            var num44 = num43 < l[2] ? 1U : 0U;
            var num45 = num41 + num44;
            var num46 = num45 < num44 ? 1 : 0;
            var num47 = num42 + num46;
            var num48 = (long)num3 * 801750719L;
            var num49 = (uint)((ulong)num48 >> 32);
            var num50 = (uint)num48;
            var num51 = num43 + num50;
            var num52 = num49 + (num51 < num50 ? 1U : 0U);
            var num53 = num45 + num52;
            var num54 = num53 < num52 ? 1 : 0;
            var num55 = num47 + num54;
            var num56 = (long)num2 * 1076732275L;
            var num57 = (uint)((ulong)num56 >> 32);
            var num58 = (uint)num56;
            var num59 = num51 + num58;
            var num60 = num57 + (num59 < num58 ? 1U : 0U);
            var num61 = num53 + num60;
            var num62 = num61 < num60 ? 1 : 0;
            var num63 = num55 + num62;
            var num64 = (long)num1 * 1354194884L;
            var num65 = (uint)((ulong)num64 >> 32);
            var num66 = (uint)num64;
            var num67 = num59 + num66;
            var num68 = num65 + (num67 < num66 ? 1U : 0U);
            var num69 = num61 + num68;
            var num70 = num69 < num68 ? 1 : 0;
            var num71 = num63 + num70;
            var num72 = num67;
            var num73 = num69;
            var num74 = (uint)num71;
            var num75 = 0;
            var num76 = num73 + l[3];
            var num77 = num76 < l[3] ? 1U : 0U;
            var num78 = num74 + num77;
            var num79 = num78 < num77 ? 1 : 0;
            var num80 = num75 + num79;
            var num81 = (long)num4 * 801750719L;
            var num82 = (uint)((ulong)num81 >> 32);
            var num83 = (uint)num81;
            var num84 = num76 + num83;
            var num85 = num82 + (num84 < num83 ? 1U : 0U);
            var num86 = num78 + num85;
            var num87 = num86 < num85 ? 1 : 0;
            var num88 = num80 + num87;
            var num89 = (long)num3 * 1076732275L;
            var num90 = (uint)((ulong)num89 >> 32);
            var num91 = (uint)num89;
            var num92 = num84 + num91;
            var num93 = num90 + (num92 < num91 ? 1U : 0U);
            var num94 = num86 + num93;
            var num95 = num94 < num93 ? 1 : 0;
            var num96 = num88 + num95;
            var num97 = (long)num2 * 1354194884L;
            var num98 = (uint)((ulong)num97 >> 32);
            var num99 = (uint)num97;
            var num100 = num92 + num99;
            var num101 = num98 + (num100 < num99 ? 1U : 0U);
            var num102 = num94 + num101;
            var num103 = num102 < num101 ? 1 : 0;
            var num104 = num96 + num103;
            var num105 = (long)num1 * 1162945305L;
            var num106 = (uint)((ulong)num105 >> 32);
            var num107 = (uint)num105;
            var num108 = num100 + num107;
            var num109 = num106 + (num108 < num107 ? 1U : 0U);
            var num110 = num102 + num109;
            var num111 = num110 < num109 ? 1 : 0;
            var num112 = num104 + num111;
            var num113 = num108;
            var num114 = num110;
            var num115 = (uint)num112;
            var num116 = 0;
            var num117 = num114 + l[4];
            var num118 = num117 < l[4] ? 1U : 0U;
            var num119 = num115 + num118;
            var num120 = num119 < num118 ? 1 : 0;
            var num121 = num116 + num120;
            var num122 = (long)num5 * 801750719L;
            var num123 = (uint)((ulong)num122 >> 32);
            var num124 = (uint)num122;
            var num125 = num117 + num124;
            var num126 = num123 + (num125 < num124 ? 1U : 0U);
            var num127 = num119 + num126;
            var num128 = num127 < num126 ? 1 : 0;
            var num129 = num121 + num128;
            var num130 = (long)num4 * 1076732275L;
            var num131 = (uint)((ulong)num130 >> 32);
            var num132 = (uint)num130;
            var num133 = num125 + num132;
            var num134 = num131 + (num133 < num132 ? 1U : 0U);
            var num135 = num127 + num134;
            var num136 = num135 < num134 ? 1 : 0;
            var num137 = num129 + num136;
            var num138 = (long)num3 * 1354194884L;
            var num139 = (uint)((ulong)num138 >> 32);
            var num140 = (uint)num138;
            var num141 = num133 + num140;
            var num142 = num139 + (num141 < num140 ? 1U : 0U);
            var num143 = num135 + num142;
            var num144 = num143 < num142 ? 1 : 0;
            var num145 = num137 + num144;
            var num146 = (long)num2 * 1162945305L;
            var num147 = (uint)((ulong)num146 >> 32);
            var num148 = (uint)num146;
            var num149 = num141 + num148;
            var num150 = num147 + (num149 < num148 ? 1U : 0U);
            var num151 = num143 + num150;
            var num152 = num151 < num150 ? 1 : 0;
            var num153 = num145 + num152;
            var num154 = num149 + num1;
            var num155 = num154 < num1 ? 1U : 0U;
            var num156 = num151 + num155;
            var num157 = num156 < num155 ? 1 : 0;
            var num158 = num153 + num157;
            var num159 = num154;
            var num160 = num156;
            var num161 = (uint)num158;
            var num162 = 0;
            var num163 = num160 + l[5];
            var num164 = num163 < l[5] ? 1U : 0U;
            var num165 = num161 + num164;
            var num166 = num165 < num164 ? 1 : 0;
            var num167 = num162 + num166;
            var num168 = (long)num6 * 801750719L;
            var num169 = (uint)((ulong)num168 >> 32);
            var num170 = (uint)num168;
            var num171 = num163 + num170;
            var num172 = num169 + (num171 < num170 ? 1U : 0U);
            var num173 = num165 + num172;
            var num174 = num173 < num172 ? 1 : 0;
            var num175 = num167 + num174;
            var num176 = (long)num5 * 1076732275L;
            var num177 = (uint)((ulong)num176 >> 32);
            var num178 = (uint)num176;
            var num179 = num171 + num178;
            var num180 = num177 + (num179 < num178 ? 1U : 0U);
            var num181 = num173 + num180;
            var num182 = num181 < num180 ? 1 : 0;
            var num183 = num175 + num182;
            var num184 = (long)num4 * 1354194884L;
            var num185 = (uint)((ulong)num184 >> 32);
            var num186 = (uint)num184;
            var num187 = num179 + num186;
            var num188 = num185 + (num187 < num186 ? 1U : 0U);
            var num189 = num181 + num188;
            var num190 = num189 < num188 ? 1 : 0;
            var num191 = num183 + num190;
            var num192 = (long)num3 * 1162945305L;
            var num193 = (uint)((ulong)num192 >> 32);
            var num194 = (uint)num192;
            var num195 = num187 + num194;
            var num196 = num193 + (num195 < num194 ? 1U : 0U);
            var num197 = num189 + num196;
            var num198 = num197 < num196 ? 1 : 0;
            var num199 = num191 + num198;
            var num200 = num195 + num2;
            var num201 = num200 < num2 ? 1U : 0U;
            var num202 = num197 + num201;
            var num203 = num202 < num201 ? 1 : 0;
            var num204 = num199 + num203;
            var num205 = num200;
            var num206 = num202;
            var num207 = (uint)num204;
            var num208 = 0;
            var num209 = num206 + l[6];
            var num210 = num209 < l[6] ? 1U : 0U;
            var num211 = num207 + num210;
            var num212 = num211 < num210 ? 1 : 0;
            var num213 = num208 + num212;
            var num214 = (long)num7 * 801750719L;
            var num215 = (uint)((ulong)num214 >> 32);
            var num216 = (uint)num214;
            var num217 = num209 + num216;
            var num218 = num215 + (num217 < num216 ? 1U : 0U);
            var num219 = num211 + num218;
            var num220 = num219 < num218 ? 1 : 0;
            var num221 = num213 + num220;
            var num222 = (long)num6 * 1076732275L;
            var num223 = (uint)((ulong)num222 >> 32);
            var num224 = (uint)num222;
            var num225 = num217 + num224;
            var num226 = num223 + (num225 < num224 ? 1U : 0U);
            var num227 = num219 + num226;
            var num228 = num227 < num226 ? 1 : 0;
            var num229 = num221 + num228;
            var num230 = (long)num5 * 1354194884L;
            var num231 = (uint)((ulong)num230 >> 32);
            var num232 = (uint)num230;
            var num233 = num225 + num232;
            var num234 = num231 + (num233 < num232 ? 1U : 0U);
            var num235 = num227 + num234;
            var num236 = num235 < num234 ? 1 : 0;
            var num237 = num229 + num236;
            var num238 = (long)num4 * 1162945305L;
            var num239 = (uint)((ulong)num238 >> 32);
            var num240 = (uint)num238;
            var num241 = num233 + num240;
            var num242 = num239 + (num241 < num240 ? 1U : 0U);
            var num243 = num235 + num242;
            var num244 = num243 < num242 ? 1 : 0;
            var num245 = num237 + num244;
            var num246 = num241 + num3;
            var num247 = num246 < num3 ? 1U : 0U;
            var num248 = num243 + num247;
            var num249 = num248 < num247 ? 1 : 0;
            var num250 = num245 + num249;
            var num251 = num246;
            var num252 = num248;
            var num253 = (uint)num250;
            var num254 = 0;
            var num255 = num252 + l[7];
            var num256 = num255 < l[7] ? 1U : 0U;
            var num257 = num253 + num256;
            var num258 = num257 < num256 ? 1 : 0;
            var num259 = num254 + num258;
            var num260 = (long)num8 * 801750719L;
            var num261 = (uint)((ulong)num260 >> 32);
            var num262 = (uint)num260;
            var num263 = num255 + num262;
            var num264 = num261 + (num263 < num262 ? 1U : 0U);
            var num265 = num257 + num264;
            var num266 = num265 < num264 ? 1 : 0;
            var num267 = num259 + num266;
            var num268 = (long)num7 * 1076732275L;
            var num269 = (uint)((ulong)num268 >> 32);
            var num270 = (uint)num268;
            var num271 = num263 + num270;
            var num272 = num269 + (num271 < num270 ? 1U : 0U);
            var num273 = num265 + num272;
            var num274 = num273 < num272 ? 1 : 0;
            var num275 = num267 + num274;
            var num276 = (long)num6 * 1354194884L;
            var num277 = (uint)((ulong)num276 >> 32);
            var num278 = (uint)num276;
            var num279 = num271 + num278;
            var num280 = num277 + (num279 < num278 ? 1U : 0U);
            var num281 = num273 + num280;
            var num282 = num281 < num280 ? 1 : 0;
            var num283 = num275 + num282;
            var num284 = (long)num5 * 1162945305L;
            var num285 = (uint)((ulong)num284 >> 32);
            var num286 = (uint)num284;
            var num287 = num279 + num286;
            var num288 = num285 + (num287 < num286 ? 1U : 0U);
            var num289 = num281 + num288;
            var num290 = num289 < num288 ? 1 : 0;
            var num291 = num283 + num290;
            var num292 = num287 + num4;
            var num293 = num292 < num4 ? 1U : 0U;
            var num294 = num289 + num293;
            var num295 = num294 < num293 ? 1 : 0;
            var num296 = num291 + num295;
            var num297 = num292;
            var num298 = num294;
            var num299 = (uint)num296;
            var num300 = 0;
            var num301 = (long)num8 * 1076732275L;
            var num302 = (uint)((ulong)num301 >> 32);
            var num303 = (uint)num301;
            var num304 = num298 + num303;
            var num305 = num302 + (num304 < num303 ? 1U : 0U);
            var num306 = num299 + num305;
            var num307 = num306 < num305 ? 1 : 0;
            var num308 = num300 + num307;
            var num309 = (long)num7 * 1354194884L;
            var num310 = (uint)((ulong)num309 >> 32);
            var num311 = (uint)num309;
            var num312 = num304 + num311;
            var num313 = num310 + (num312 < num311 ? 1U : 0U);
            var num314 = num306 + num313;
            var num315 = num314 < num313 ? 1 : 0;
            var num316 = num308 + num315;
            var num317 = (long)num6 * 1162945305L;
            var num318 = (uint)((ulong)num317 >> 32);
            var num319 = (uint)num317;
            var num320 = num312 + num319;
            var num321 = num318 + (num320 < num319 ? 1U : 0U);
            var num322 = num314 + num321;
            var num323 = num322 < num321 ? 1 : 0;
            var num324 = num316 + num323;
            var num325 = num320 + num5;
            var num326 = num325 < num5 ? 1U : 0U;
            var num327 = num322 + num326;
            var num328 = num327 < num326 ? 1 : 0;
            var num329 = num324 + num328;
            var num330 = num325;
            var num331 = num327;
            var num332 = (uint)num329;
            var num333 = 0;
            var num334 = (long)num8 * 1354194884L;
            var num335 = (uint)((ulong)num334 >> 32);
            var num336 = (uint)num334;
            var num337 = num331 + num336;
            var num338 = num335 + (num337 < num336 ? 1U : 0U);
            var num339 = num332 + num338;
            var num340 = num339 < num338 ? 1 : 0;
            var num341 = num333 + num340;
            var num342 = (long)num7 * 1162945305L;
            var num343 = (uint)((ulong)num342 >> 32);
            var num344 = (uint)num342;
            var num345 = num337 + num344;
            var num346 = num343 + (num345 < num344 ? 1U : 0U);
            var num347 = num339 + num346;
            var num348 = num347 < num346 ? 1 : 0;
            var num349 = num341 + num348;
            var num350 = num345 + num6;
            var num351 = num350 < num6 ? 1U : 0U;
            var num352 = num347 + num351;
            var num353 = num352 < num351 ? 1 : 0;
            var num354 = num349 + num353;
            var num355 = num350;
            var num356 = num352;
            var num357 = (uint)num354;
            var num358 = 0;
            var num359 = (long)num8 * 1162945305L;
            var num360 = (uint)((ulong)num359 >> 32);
            var num361 = (uint)num359;
            var num362 = num356 + num361;
            var num363 = num360 + (num362 < num361 ? 1U : 0U);
            var num364 = num357 + num363;
            var num365 = num364 < num363 ? 1 : 0;
            var num366 = num358 + num365;
            var num367 = num362 + num7;
            var num368 = num367 < num7 ? 1U : 0U;
            var num369 = num364 + num368;
            var num370 = num369 < num368 ? 1 : 0;
            var num371 = num366 + num370;
            var num372 = num367;
            var num373 = num369;
            var num374 = (uint)num371;
            var num375 = num373 + num8;
            var num376 = num374 + (num375 < num8 ? 1U : 0U);
            var num377 = num375;
            var num378 = num376;
            uint num379 = 0;
            var num380 = num378;
            var num381 = num18;
            uint num382 = 0;
            var num383 = 0;
            var num384 = (long)num330 * 801750719L;
            var num385 = (uint)((ulong)num384 >> 32);
            var num386 = (uint)num384;
            var num387 = num381 + num386;
            var num388 = num385 + (num387 < num386 ? 1U : 0U);
            var num389 = num382 + num388;
            var num390 = num387;
            var num391 = num389;
            uint num392 = 0;
            var num393 = num391 + num39;
            var num394 = num392 + (num393 < num39 ? 1U : 0U);
            var num395 = (long)num355 * 801750719L;
            var num396 = (uint)((ulong)num395 >> 32);
            var num397 = (uint)num395;
            var num398 = num393 + num397;
            var num399 = num396 + (num398 < num397 ? 1U : 0U);
            var num400 = num394 + num399;
            var num401 = num400 < num399 ? 1 : 0;
            var num402 = num383 + num401;
            var num403 = (long)num330 * 1076732275L;
            var num404 = (uint)((ulong)num403 >> 32);
            var num405 = (uint)num403;
            var num406 = num398 + num405;
            var num407 = num404 + (num406 < num405 ? 1U : 0U);
            var num408 = num400 + num407;
            var num409 = num408 < num407 ? 1 : 0;
            var num410 = num402 + num409;
            var num411 = num406;
            var num412 = num408;
            var num413 = (uint)num410;
            var num414 = 0;
            var num415 = num412 + num72;
            var num416 = num415 < num72 ? 1U : 0U;
            var num417 = num413 + num416;
            var num418 = num417 < num416 ? 1 : 0;
            var num419 = num414 + num418;
            var num420 = (long)num372 * 801750719L;
            var num421 = (uint)((ulong)num420 >> 32);
            var num422 = (uint)num420;
            var num423 = num415 + num422;
            var num424 = num421 + (num423 < num422 ? 1U : 0U);
            var num425 = num417 + num424;
            var num426 = num425 < num424 ? 1 : 0;
            var num427 = num419 + num426;
            var num428 = (long)num355 * 1076732275L;
            var num429 = (uint)((ulong)num428 >> 32);
            var num430 = (uint)num428;
            var num431 = num423 + num430;
            var num432 = num429 + (num431 < num430 ? 1U : 0U);
            var num433 = num425 + num432;
            var num434 = num433 < num432 ? 1 : 0;
            var num435 = num427 + num434;
            var num436 = (long)num330 * 1354194884L;
            var num437 = (uint)((ulong)num436 >> 32);
            var num438 = (uint)num436;
            var num439 = num431 + num438;
            var num440 = num437 + (num439 < num438 ? 1U : 0U);
            var num441 = num433 + num440;
            var num442 = num441 < num440 ? 1 : 0;
            var num443 = num435 + num442;
            var num444 = num439;
            var num445 = num441;
            var num446 = (uint)num443;
            var num447 = 0;
            var num448 = num445 + num113;
            var num449 = num448 < num113 ? 1U : 0U;
            var num450 = num446 + num449;
            var num451 = num450 < num449 ? 1 : 0;
            var num452 = num447 + num451;
            var num453 = (long)num377 * 801750719L;
            var num454 = (uint)((ulong)num453 >> 32);
            var num455 = (uint)num453;
            var num456 = num448 + num455;
            var num457 = num454 + (num456 < num455 ? 1U : 0U);
            var num458 = num450 + num457;
            var num459 = num458 < num457 ? 1 : 0;
            var num460 = num452 + num459;
            var num461 = (long)num372 * 1076732275L;
            var num462 = (uint)((ulong)num461 >> 32);
            var num463 = (uint)num461;
            var num464 = num456 + num463;
            var num465 = num462 + (num464 < num463 ? 1U : 0U);
            var num466 = num458 + num465;
            var num467 = num466 < num465 ? 1 : 0;
            var num468 = num460 + num467;
            var num469 = (long)num355 * 1354194884L;
            var num470 = (uint)((ulong)num469 >> 32);
            var num471 = (uint)num469;
            var num472 = num464 + num471;
            var num473 = num470 + (num472 < num471 ? 1U : 0U);
            var num474 = num466 + num473;
            var num475 = num474 < num473 ? 1 : 0;
            var num476 = num468 + num475;
            var num477 = (long)num330 * 1162945305L;
            var num478 = (uint)((ulong)num477 >> 32);
            var num479 = (uint)num477;
            var num480 = num472 + num479;
            var num481 = num478 + (num480 < num479 ? 1U : 0U);
            var num482 = num474 + num481;
            var num483 = num482 < num481 ? 1 : 0;
            var num484 = num476 + num483;
            var num485 = num480;
            var num486 = num482;
            var num487 = (uint)num484;
            var num488 = 0;
            var num489 = num486 + num159;
            var num490 = num489 < num159 ? 1U : 0U;
            var num491 = num487 + num490;
            var num492 = num491 < num490 ? 1 : 0;
            var num493 = num488 + num492;
            var num494 = (long)num380 * 801750719L;
            var num495 = (uint)((ulong)num494 >> 32);
            var num496 = (uint)num494;
            var num497 = num489 + num496;
            var num498 = num495 + (num497 < num496 ? 1U : 0U);
            var num499 = num491 + num498;
            var num500 = num499 < num498 ? 1 : 0;
            var num501 = num493 + num500;
            var num502 = (long)num377 * 1076732275L;
            var num503 = (uint)((ulong)num502 >> 32);
            var num504 = (uint)num502;
            var num505 = num497 + num504;
            var num506 = num503 + (num505 < num504 ? 1U : 0U);
            var num507 = num499 + num506;
            var num508 = num507 < num506 ? 1 : 0;
            var num509 = num501 + num508;
            var num510 = (long)num372 * 1354194884L;
            var num511 = (uint)((ulong)num510 >> 32);
            var num512 = (uint)num510;
            var num513 = num505 + num512;
            var num514 = num511 + (num513 < num512 ? 1U : 0U);
            var num515 = num507 + num514;
            var num516 = num515 < num514 ? 1 : 0;
            var num517 = num509 + num516;
            var num518 = (long)num355 * 1162945305L;
            var num519 = (uint)((ulong)num518 >> 32);
            var num520 = (uint)num518;
            var num521 = num513 + num520;
            var num522 = num519 + (num521 < num520 ? 1U : 0U);
            var num523 = num515 + num522;
            var num524 = num523 < num522 ? 1 : 0;
            var num525 = num517 + num524;
            var num526 = num521 + num330;
            var num527 = num526 < num330 ? 1U : 0U;
            var num528 = num523 + num527;
            var num529 = num528 < num527 ? 1 : 0;
            var num530 = num525 + num529;
            var num531 = num526;
            var num532 = num528;
            var num533 = (uint)num530;
            var num534 = 0;
            var num535 = num532 + num205;
            var num536 = num535 < num205 ? 1U : 0U;
            var num537 = num533 + num536;
            var num538 = num537 < num536 ? 1 : 0;
            var num539 = num534 + num538;
            var num540 = (long)num380 * 1076732275L;
            var num541 = (uint)((ulong)num540 >> 32);
            var num542 = (uint)num540;
            var num543 = num535 + num542;
            var num544 = num541 + (num543 < num542 ? 1U : 0U);
            var num545 = num537 + num544;
            var num546 = num545 < num544 ? 1 : 0;
            var num547 = num539 + num546;
            var num548 = (long)num377 * 1354194884L;
            var num549 = (uint)((ulong)num548 >> 32);
            var num550 = (uint)num548;
            var num551 = num543 + num550;
            var num552 = num549 + (num551 < num550 ? 1U : 0U);
            var num553 = num545 + num552;
            var num554 = num553 < num552 ? 1 : 0;
            var num555 = num547 + num554;
            var num556 = (long)num372 * 1162945305L;
            var num557 = (uint)((ulong)num556 >> 32);
            var num558 = (uint)num556;
            var num559 = num551 + num558;
            var num560 = num557 + (num559 < num558 ? 1U : 0U);
            var num561 = num553 + num560;
            var num562 = num561 < num560 ? 1 : 0;
            var num563 = num555 + num562;
            var num564 = num559 + num355;
            var num565 = num564 < num355 ? 1U : 0U;
            var num566 = num561 + num565;
            var num567 = num566 < num565 ? 1 : 0;
            var num568 = num563 + num567;
            var num569 = num564;
            var num570 = num566;
            var num571 = (uint)num568;
            var num572 = 0;
            var num573 = num570 + num251;
            var num574 = num573 < num251 ? 1U : 0U;
            var num575 = num571 + num574;
            var num576 = num575 < num574 ? 1 : 0;
            var num577 = num572 + num576;
            var num578 = (long)num380 * 1354194884L;
            var num579 = (uint)((ulong)num578 >> 32);
            var num580 = (uint)num578;
            var num581 = num573 + num580;
            var num582 = num579 + (num581 < num580 ? 1U : 0U);
            var num583 = num575 + num582;
            var num584 = num583 < num582 ? 1 : 0;
            var num585 = num577 + num584;
            var num586 = (long)num377 * 1162945305L;
            var num587 = (uint)((ulong)num586 >> 32);
            var num588 = (uint)num586;
            var num589 = num581 + num588;
            var num590 = num587 + (num589 < num588 ? 1U : 0U);
            var num591 = num583 + num590;
            var num592 = num591 < num590 ? 1 : 0;
            var num593 = num585 + num592;
            var num594 = num589 + num372;
            var num595 = num594 < num372 ? 1U : 0U;
            var num596 = num591 + num595;
            var num597 = num596 < num595 ? 1 : 0;
            var num598 = num593 + num597;
            var num599 = num594;
            var num600 = num596;
            var num601 = (uint)num598;
            var num602 = num600 + num297;
            var num603 = num601 + (num602 < num297 ? 1U : 0U);
            var num604 = (long)num380 * 1162945305L;
            var num605 = (uint)((ulong)num604 >> 32);
            var num606 = (uint)num604;
            var num607 = num602 + num606;
            var num608 = num605 + (num607 < num606 ? 1U : 0U);
            var num609 = num603 + num608;
            var num610 = num607 + num377;
            var num611 = num609 + (num610 < num377 ? 1U : 0U);
            var num612 = num610;
            var num613 = num611;
            num379 = 0U;
            var num614 = num613 + num380;
            var num615 = (ulong)num390 + 801750719UL * (ulong)num614;
            r.D[0] = (uint)(num615 & (ulong)uint.MaxValue);
            var num616 = (num615 >> 32) + ((ulong)num411 + 1076732275UL * (ulong)num614);
            r.D[1] = (uint)(num616 & (ulong)uint.MaxValue);
            var num617 = (num616 >> 32) + ((ulong)num444 + 1354194884UL * (ulong)num614);
            r.D[2] = (uint)(num617 & (ulong)uint.MaxValue);
            var num618 = (num617 >> 32) + ((ulong)num485 + 1162945305UL * (ulong)num614);
            r.D[3] = (uint)(num618 & (ulong)uint.MaxValue);
            var num619 = (num618 >> 32) + ((ulong)num531 + (ulong)num614);
            r.D[4] = (uint)(num619 & (ulong)uint.MaxValue);
            var num620 = (num619 >> 32) + (ulong)num569;
            r.D[5] = (uint)(num620 & (ulong)uint.MaxValue);
            var num621 = (num620 >> 32) + (ulong)num599;
            r.D[6] = (uint)(num621 & (ulong)uint.MaxValue);
            var num622 = (num621 >> 32) + (ulong)num612;
            r.D[7] = (uint)(num622 & (ulong)uint.MaxValue);
            var isOverflow = num622 >> 32 > 0UL || Scalar.CheckOverflow(r);
            Scalar.Reduce(r, isOverflow);
        }

        private static void Reduce(Scalar r, bool isOverflow)
        {
            var num1 = isOverflow ? 1UL : 0UL;
            var num2 = (ulong)r.D[0] + num1 * 801750719UL;
            r.D[0] = (uint)(num2 & (ulong)uint.MaxValue);
            var num3 = (num2 >> 32) + ((ulong)r.D[1] + num1 * 1076732275UL);
            r.D[1] = (uint)(num3 & (ulong)uint.MaxValue);
            var num4 = (num3 >> 32) + ((ulong)r.D[2] + num1 * 1354194884UL);
            r.D[2] = (uint)(num4 & (ulong)uint.MaxValue);
            var num5 = (num4 >> 32) + ((ulong)r.D[3] + num1 * 1162945305UL);
            r.D[3] = (uint)(num5 & (ulong)uint.MaxValue);
            var num6 = (num5 >> 32) + ((ulong)r.D[4] + num1);
            r.D[4] = (uint)(num6 & (ulong)uint.MaxValue);
            var num7 = (num6 >> 32) + (ulong)r.D[5];
            r.D[5] = (uint)(num7 & (ulong)uint.MaxValue);
            var num8 = (num7 >> 32) + (ulong)r.D[6];
            r.D[6] = (uint)(num8 & (ulong)uint.MaxValue);
            var num9 = (num8 >> 32) + (ulong)r.D[7];
            r.D[7] = (uint)(num9 & (ulong)uint.MaxValue);
        }

        private static bool CheckOverflow(Scalar a)
        {
            var flag1 = a.D[7] < uint.MaxValue || a.D[6] < uint.MaxValue || a.D[5] < uint.MaxValue || a.D[4] < 4294967294U;
            var flag2 = a.D[4] > 4294967294U & !flag1;
            var flag3 = flag1 | a.D[3] < 3132021990U & !flag2;
            var flag4 = flag2 | a.D[3] > 3132021990U & !flag3;
            var flag5 = flag3 | a.D[2] < 2940772411U & !flag4;
            var flag6 = flag4 | a.D[2] > 2940772411U & !flag5;
            var flag7 = flag5 | a.D[1] < 3218235020U & !flag6;
            return flag6 | a.D[1] > 3218235020U & !flag7 | a.D[0] >= 3493216577U & !flag7;
        }

        public static void Inverse(Scalar r, Scalar x)
        {
            var scalar1 = new Scalar();
            Scalar.Sqr(scalar1, x);
            var scalar2 = new Scalar();
            Scalar.Mul(scalar2, scalar1, x);
            var scalar3 = new Scalar();
            Scalar.Mul(scalar3, scalar1, scalar2);
            var scalar4 = new Scalar();
            Scalar.Mul(scalar4, scalar3, scalar1);
            var scalar5 = new Scalar();
            Scalar.Mul(scalar5, scalar4, scalar1);
            var scalar6 = new Scalar();
            Scalar.Mul(scalar6, scalar5, scalar1);
            var scalar7 = new Scalar();
            Scalar.Mul(scalar7, scalar6, scalar1);
            var scalar8 = new Scalar();
            Scalar.Sqr(scalar8, scalar7);
            Scalar.Sqr(scalar8, scalar8);
            Scalar.Mul(scalar8, scalar8, scalar6);
            var scalar9 = new Scalar();
            Scalar.Sqr(scalar9, scalar8);
            Scalar.Sqr(scalar9, scalar9);
            Scalar.Mul(scalar9, scalar9, scalar2);
            var scalar10 = new Scalar();
            Scalar.Sqr(scalar10, scalar9);
            for (var index = 0; index < 5; ++index)
                Scalar.Sqr(scalar10, scalar10);
            Scalar.Mul(scalar10, scalar10, scalar8);
            var scalar11 = new Scalar();
            Scalar.Sqr(scalar11, scalar10);
            for (var index = 0; index < 13; ++index)
                Scalar.Sqr(scalar11, scalar11);
            Scalar.Mul(scalar11, scalar11, scalar10);
            var scalar12 = new Scalar();
            Scalar.Sqr(scalar12, scalar11);
            for (var index = 0; index < 27; ++index)
                Scalar.Sqr(scalar12, scalar12);
            Scalar.Mul(scalar12, scalar12, scalar11);
            var scalar13 = new Scalar();
            Scalar.Sqr(scalar13, scalar12);
            for (var index = 0; index < 55; ++index)
                Scalar.Sqr(scalar13, scalar13);
            Scalar.Mul(scalar13, scalar13, scalar12);
            var scalar14 = new Scalar();
            Scalar.Sqr(scalar14, scalar13);
            for (var index = 0; index < 13; ++index)
                Scalar.Sqr(scalar14, scalar14);
            Scalar.Mul(scalar14, scalar14, scalar10);
            var scalar15 = scalar14.Clone();
            for (var index = 0; index < 3; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar3);
            for (var index = 0; index < 4; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar4);
            for (var index = 0; index < 4; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar3);
            for (var index = 0; index < 5; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar6);
            for (var index = 0; index < 4; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar6);
            for (var index = 0; index < 4; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar4);
            for (var index = 0; index < 5; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar4);
            for (var index = 0; index < 6; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar7);
            for (var index = 0; index < 4; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar3);
            for (var index = 0; index < 3; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar4);
            for (var index = 0; index < 5; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar5);
            for (var index = 0; index < 6; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar3);
            for (var index = 0; index < 10; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar4);
            for (var index = 0; index < 4; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar4);
            for (var index = 0; index < 9; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar9);
            for (var index = 0; index < 5; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar5);
            for (var index = 0; index < 6; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar6);
            for (var index = 0; index < 4; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar7);
            for (var index = 0; index < 5; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar2);
            for (var index = 0; index < 6; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar7);
            for (var index = 0; index < 10; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar7);
            for (var index = 0; index < 4; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, scalar5);
            for (var index = 0; index < 6; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(scalar15, scalar15, x);
            for (var index = 0; index < 8; ++index)
                Scalar.Sqr(scalar15, scalar15);
            Scalar.Mul(r, scalar15, scalar8);
        }

        public static bool IsEven(Scalar a)
        {
            return (a.D[0] & 1U) < 1U;
        }

        public static void SetB32(Scalar r, byte[] b32, ref bool overflow)
        {
            var flag = Scalar.SetB32(r, b32);
            if (!overflow)
                return;
            overflow = flag;
        }

        public static bool SetB32(Scalar r, byte[] b32)
        {
            r.D[0] = Util.BitToUInt32Invers(b32, 28);
            r.D[1] = Util.BitToUInt32Invers(b32, 24);
            r.D[2] = Util.BitToUInt32Invers(b32, 20);
            r.D[3] = Util.BitToUInt32Invers(b32, 16);
            r.D[4] = Util.BitToUInt32Invers(b32, 12);
            r.D[5] = Util.BitToUInt32Invers(b32, 8);
            r.D[6] = Util.BitToUInt32Invers(b32, 4);
            r.D[7] = Util.BitToUInt32Invers(b32, 0);
            var isOverflow = Scalar.CheckOverflow(r);
            Scalar.Reduce(r, isOverflow);
            return isOverflow;
        }

        public static bool SetB32(Scalar r, byte[] b32, int index)
        {
            r.D[0] = Util.BitToUInt32Invers(b32, index + 28);
            r.D[1] = Util.BitToUInt32Invers(b32, index + 24);
            r.D[2] = Util.BitToUInt32Invers(b32, index + 20);
            r.D[3] = Util.BitToUInt32Invers(b32, index + 16);
            r.D[4] = Util.BitToUInt32Invers(b32, index + 12);
            r.D[5] = Util.BitToUInt32Invers(b32, index + 8);
            r.D[6] = Util.BitToUInt32Invers(b32, index + 4);
            r.D[7] = Util.BitToUInt32Invers(b32, index);
            var isOverflow = Scalar.CheckOverflow(r);
            Scalar.Reduce(r, isOverflow);
            return isOverflow;
        }

        public uint GetBits(int offset, int count)
        {
            if (offset + count - 1 >> 5 != offset >> 5)
                throw new ArithmeticException();
            return this.D[offset >> 5] >> offset & (uint)((1 << count) - 1);
        }

        public static void Clear(Scalar r)
        {
            r.D[0] = 0U;
            r.D[1] = 0U;
            r.D[2] = 0U;
            r.D[3] = 0U;
            r.D[4] = 0U;
            r.D[5] = 0U;
            r.D[6] = 0U;
            r.D[7] = 0U;
        }

        public void SetInt(uint v)
        {
            this.D[0] = v;
            this.D[1] = 0U;
            this.D[2] = 0U;
            this.D[3] = 0U;
            this.D[4] = 0U;
            this.D[5] = 0U;
            this.D[6] = 0U;
            this.D[7] = 0U;
        }

        public static byte[] GetB32(Scalar a)
        {
            var bin = new byte[32];
            Scalar.GetB32(bin, 0, a);
            return bin;
        }

        public static void GetB32(byte[] bin, int index, Scalar a)
        {
            bin[index] = (byte)(a.D[7] >> 24);
            bin[index + 1] = (byte)(a.D[7] >> 16);
            bin[index + 2] = (byte)(a.D[7] >> 8);
            bin[index + 3] = (byte)a.D[7];
            bin[index + 4] = (byte)(a.D[6] >> 24);
            bin[index + 5] = (byte)(a.D[6] >> 16);
            bin[index + 6] = (byte)(a.D[6] >> 8);
            bin[index + 7] = (byte)a.D[6];
            bin[index + 8] = (byte)(a.D[5] >> 24);
            bin[index + 9] = (byte)(a.D[5] >> 16);
            bin[index + 10] = (byte)(a.D[5] >> 8);
            bin[index + 11] = (byte)a.D[5];
            bin[index + 12] = (byte)(a.D[4] >> 24);
            bin[index + 13] = (byte)(a.D[4] >> 16);
            bin[index + 14] = (byte)(a.D[4] >> 8);
            bin[index + 15] = (byte)a.D[4];
            bin[index + 16] = (byte)(a.D[3] >> 24);
            bin[index + 17] = (byte)(a.D[3] >> 16);
            bin[index + 18] = (byte)(a.D[3] >> 8);
            bin[index + 19] = (byte)a.D[3];
            bin[index + 20] = (byte)(a.D[2] >> 24);
            bin[index + 21] = (byte)(a.D[2] >> 16);
            bin[index + 22] = (byte)(a.D[2] >> 8);
            bin[index + 23] = (byte)a.D[2];
            bin[index + 24] = (byte)(a.D[1] >> 24);
            bin[index + 25] = (byte)(a.D[1] >> 16);
            bin[index + 26] = (byte)(a.D[1] >> 8);
            bin[index + 27] = (byte)a.D[1];
            bin[index + 28] = (byte)(a.D[0] >> 24);
            bin[index + 29] = (byte)(a.D[0] >> 16);
            bin[index + 30] = (byte)(a.D[0] >> 8);
            bin[index + 31] = (byte)a.D[0];
        }

        public static void Negate(Scalar r, Scalar a)
        {
            var num1 = Scalar.IsZero(a) ? 0U : uint.MaxValue;
            var num2 = (ulong)~a.D[0] + 3493216577UL + 1UL;
            r.D[0] = (uint)(num2 & (ulong)num1);
            var num3 = (num2 >> 32) + ((ulong)~a.D[1] + 3218235020UL);
            r.D[1] = (uint)(num3 & (ulong)num1);
            var num4 = (num3 >> 32) + ((ulong)~a.D[2] + 2940772411UL);
            r.D[2] = (uint)(num4 & (ulong)num1);
            var num5 = (num4 >> 32) + ((ulong)~a.D[3] + 3132021990UL);
            r.D[3] = (uint)(num5 & (ulong)num1);
            var num6 = (num5 >> 32) + ((ulong)~a.D[4] + 4294967294UL);
            r.D[4] = (uint)(num6 & (ulong)num1);
            var num7 = (num6 >> 32) + ((ulong)~a.D[5] + (ulong)uint.MaxValue);
            r.D[5] = (uint)(num7 & (ulong)num1);
            var num8 = (num7 >> 32) + ((ulong)~a.D[6] + (ulong)uint.MaxValue);
            r.D[6] = (uint)(num8 & (ulong)num1);
            var num9 = (num8 >> 32) + ((ulong)~a.D[7] + (ulong)uint.MaxValue);
            r.D[7] = (uint)(num9 & (ulong)num1);
        }

        public static bool IsHigh(Scalar a)
        {
            var flag1 = false;
            var flag2 = false | a.D[7] < (uint)int.MaxValue;
            var flag3 = flag1 | a.D[7] > (uint)int.MaxValue & !flag2;
            var flag4 = flag2 | a.D[6] < uint.MaxValue & !flag3 | a.D[5] < uint.MaxValue & !flag3 | a.D[4] < uint.MaxValue & !flag3 | a.D[3] < 1566010995U & !flag3;
            var flag5 = flag3 | a.D[3] > 1566010995U & !flag4;
            var flag6 = flag4 | a.D[2] < 1470386205U & !flag5;
            var flag7 = flag5 | a.D[2] > 1470386205U & !flag6;
            var flag8 = flag6 | a.D[1] < 3756601158U & !flag7;
            return flag7 | a.D[1] > 3756601158U & !flag8 | a.D[0] > 1746608288U & !flag8;
        }

        private static void Sqr(Scalar r, Scalar a)
        {
            var l = new uint[16];
            Scalar.Sqr512(l, a);
            Scalar.Reduce512(r, l);
        }

        private static void Sqr512(uint[] l, Scalar a)
        {
            uint num1 = 0;
            uint num2 = 0;
            var num3 = 0;
            var num4 = (long)a.D[0] * (long)a.D[0];
            var num5 = (uint)((ulong)num4 >> 32);
            var num6 = (uint)num4;
            var num7 = num1 + num6;
            var num8 = num5 + (num7 < num6 ? 1U : 0U);
            var num9 = num2 + num8;
            l[0] = num7;
            var num10 = num9;
            uint num11 = 0;
            var num12 = (long)a.D[0] * (long)a.D[1];
            var num13 = (uint)((ulong)num12 >> 32);
            var num14 = (uint)num12;
            var num15 = num13 + num13;
            var num16 = num15 < num13 ? 1 : 0;
            var num17 = num3 + num16;
            var num18 = num14 + num14;
            var num19 = num15 + (num18 < num14 ? 1U : 0U);
            var num20 = num10 + num18;
            var num21 = num19 + (num20 < num18 ? 1U : 0U);
            var num22 = num20 < num18 & (int)num21 == 0 ? 1 : 0;
            var num23 = num17 + num22;
            var num24 = num11 + num21;
            var num25 = num24 < num21 ? 1 : 0;
            var num26 = num23 + num25;
            l[1] = num20;
            var num27 = num24;
            var num28 = (uint)num26;
            var num29 = 0;
            var num30 = (long)a.D[0] * (long)a.D[2];
            var num31 = (uint)((ulong)num30 >> 32);
            var num32 = (uint)num30;
            var num33 = num31 + num31;
            var num34 = num33 < num31 ? 1 : 0;
            var num35 = num29 + num34;
            var num36 = num32 + num32;
            var num37 = num33 + (num36 < num32 ? 1U : 0U);
            var num38 = num27 + num36;
            var num39 = num37 + (num38 < num36 ? 1U : 0U);
            var num40 = num38 < num36 & (int)num39 == 0 ? 1 : 0;
            var num41 = num35 + num40;
            var num42 = num28 + num39;
            var num43 = num42 < num39 ? 1 : 0;
            var num44 = num41 + num43;
            var num45 = (long)a.D[1] * (long)a.D[1];
            var num46 = (uint)((ulong)num45 >> 32);
            var num47 = (uint)num45;
            var num48 = num38 + num47;
            var num49 = num46 + (num48 < num47 ? 1U : 0U);
            var num50 = num42 + num49;
            var num51 = num50 < num49 ? 1 : 0;
            var num52 = num44 + num51;
            l[2] = num48;
            var num53 = num50;
            var num54 = (uint)num52;
            var num55 = 0;
            var num56 = (long)a.D[0] * (long)a.D[3];
            var num57 = (uint)((ulong)num56 >> 32);
            var num58 = (uint)num56;
            var num59 = num57 + num57;
            var num60 = num59 < num57 ? 1 : 0;
            var num61 = num55 + num60;
            var num62 = num58 + num58;
            var num63 = num59 + (num62 < num58 ? 1U : 0U);
            var num64 = num53 + num62;
            var num65 = num63 + (num64 < num62 ? 1U : 0U);
            var num66 = num64 < num62 & (int)num65 == 0 ? 1 : 0;
            var num67 = num61 + num66;
            var num68 = num54 + num65;
            var num69 = num68 < num65 ? 1 : 0;
            var num70 = num67 + num69;
            var num71 = (long)a.D[1] * (long)a.D[2];
            var num72 = (uint)((ulong)num71 >> 32);
            var num73 = (uint)num71;
            var num74 = num72 + num72;
            var num75 = num74 < num72 ? 1 : 0;
            var num76 = num70 + num75;
            var num77 = num73 + num73;
            var num78 = num74 + (num77 < num73 ? 1U : 0U);
            var num79 = num64 + num77;
            var num80 = num78 + (num79 < num77 ? 1U : 0U);
            var num81 = num79 < num77 & (int)num80 == 0 ? 1 : 0;
            var num82 = num76 + num81;
            var num83 = num68 + num80;
            var num84 = num83 < num80 ? 1 : 0;
            var num85 = num82 + num84;
            l[3] = num79;
            var num86 = num83;
            var num87 = (uint)num85;
            var num88 = 0;
            var num89 = (long)a.D[0] * (long)a.D[4];
            var num90 = (uint)((ulong)num89 >> 32);
            var num91 = (uint)num89;
            var num92 = num90 + num90;
            var num93 = num92 < num90 ? 1 : 0;
            var num94 = num88 + num93;
            var num95 = num91 + num91;
            var num96 = num92 + (num95 < num91 ? 1U : 0U);
            var num97 = num86 + num95;
            var num98 = num96 + (num97 < num95 ? 1U : 0U);
            var num99 = num97 < num95 & (int)num98 == 0 ? 1 : 0;
            var num100 = num94 + num99;
            var num101 = num87 + num98;
            var num102 = num101 < num98 ? 1 : 0;
            var num103 = num100 + num102;
            var num104 = (long)a.D[1] * (long)a.D[3];
            var num105 = (uint)((ulong)num104 >> 32);
            var num106 = (uint)num104;
            var num107 = num105 + num105;
            var num108 = num107 < num105 ? 1 : 0;
            var num109 = num103 + num108;
            var num110 = num106 + num106;
            var num111 = num107 + (num110 < num106 ? 1U : 0U);
            var num112 = num97 + num110;
            var num113 = num111 + (num112 < num110 ? 1U : 0U);
            var num114 = num112 < num110 & (int)num113 == 0 ? 1 : 0;
            var num115 = num109 + num114;
            var num116 = num101 + num113;
            var num117 = num116 < num113 ? 1 : 0;
            var num118 = num115 + num117;
            var num119 = (long)a.D[2] * (long)a.D[2];
            var num120 = (uint)((ulong)num119 >> 32);
            var num121 = (uint)num119;
            var num122 = num112 + num121;
            var num123 = num120 + (num122 < num121 ? 1U : 0U);
            var num124 = num116 + num123;
            var num125 = num124 < num123 ? 1 : 0;
            var num126 = num118 + num125;
            l[4] = num122;
            var num127 = num124;
            var num128 = (uint)num126;
            var num129 = 0;
            var num130 = (long)a.D[0] * (long)a.D[5];
            var num131 = (uint)((ulong)num130 >> 32);
            var num132 = (uint)num130;
            var num133 = num131 + num131;
            var num134 = num133 < num131 ? 1 : 0;
            var num135 = num129 + num134;
            var num136 = num132 + num132;
            var num137 = num133 + (num136 < num132 ? 1U : 0U);
            var num138 = num127 + num136;
            var num139 = num137 + (num138 < num136 ? 1U : 0U);
            var num140 = num138 < num136 & (int)num139 == 0 ? 1 : 0;
            var num141 = num135 + num140;
            var num142 = num128 + num139;
            var num143 = num142 < num139 ? 1 : 0;
            var num144 = num141 + num143;
            var num145 = (long)a.D[1] * (long)a.D[4];
            var num146 = (uint)((ulong)num145 >> 32);
            var num147 = (uint)num145;
            var num148 = num146 + num146;
            var num149 = num148 < num146 ? 1 : 0;
            var num150 = num144 + num149;
            var num151 = num147 + num147;
            var num152 = num148 + (num151 < num147 ? 1U : 0U);
            var num153 = num138 + num151;
            var num154 = num152 + (num153 < num151 ? 1U : 0U);
            var num155 = num153 < num151 & (int)num154 == 0 ? 1 : 0;
            var num156 = num150 + num155;
            var num157 = num142 + num154;
            var num158 = num157 < num154 ? 1 : 0;
            var num159 = num156 + num158;
            var num160 = (long)a.D[2] * (long)a.D[3];
            var num161 = (uint)((ulong)num160 >> 32);
            var num162 = (uint)num160;
            var num163 = num161 + num161;
            var num164 = num163 < num161 ? 1 : 0;
            var num165 = num159 + num164;
            var num166 = num162 + num162;
            var num167 = num163 + (num166 < num162 ? 1U : 0U);
            var num168 = num153 + num166;
            var num169 = num167 + (num168 < num166 ? 1U : 0U);
            var num170 = num168 < num166 & (int)num169 == 0 ? 1 : 0;
            var num171 = num165 + num170;
            var num172 = num157 + num169;
            var num173 = num172 < num169 ? 1 : 0;
            var num174 = num171 + num173;
            l[5] = num168;
            var num175 = num172;
            var num176 = (uint)num174;
            var num177 = 0;
            var num178 = (long)a.D[0] * (long)a.D[6];
            var num179 = (uint)((ulong)num178 >> 32);
            var num180 = (uint)num178;
            var num181 = num179 + num179;
            var num182 = num181 < num179 ? 1 : 0;
            var num183 = num177 + num182;
            var num184 = num180 + num180;
            var num185 = num181 + (num184 < num180 ? 1U : 0U);
            var num186 = num175 + num184;
            var num187 = num185 + (num186 < num184 ? 1U : 0U);
            var num188 = num186 < num184 & (int)num187 == 0 ? 1 : 0;
            var num189 = num183 + num188;
            var num190 = num176 + num187;
            var num191 = num190 < num187 ? 1 : 0;
            var num192 = num189 + num191;
            var num193 = (long)a.D[1] * (long)a.D[5];
            var num194 = (uint)((ulong)num193 >> 32);
            var num195 = (uint)num193;
            var num196 = num194 + num194;
            var num197 = num196 < num194 ? 1 : 0;
            var num198 = num192 + num197;
            var num199 = num195 + num195;
            var num200 = num196 + (num199 < num195 ? 1U : 0U);
            var num201 = num186 + num199;
            var num202 = num200 + (num201 < num199 ? 1U : 0U);
            var num203 = num201 < num199 & (int)num202 == 0 ? 1 : 0;
            var num204 = num198 + num203;
            var num205 = num190 + num202;
            var num206 = num205 < num202 ? 1 : 0;
            var num207 = num204 + num206;
            var num208 = (long)a.D[2] * (long)a.D[4];
            var num209 = (uint)((ulong)num208 >> 32);
            var num210 = (uint)num208;
            var num211 = num209 + num209;
            var num212 = num211 < num209 ? 1 : 0;
            var num213 = num207 + num212;
            var num214 = num210 + num210;
            var num215 = num211 + (num214 < num210 ? 1U : 0U);
            var num216 = num201 + num214;
            var num217 = num215 + (num216 < num214 ? 1U : 0U);
            var num218 = num216 < num214 & (int)num217 == 0 ? 1 : 0;
            var num219 = num213 + num218;
            var num220 = num205 + num217;
            var num221 = num220 < num217 ? 1 : 0;
            var num222 = num219 + num221;
            var num223 = (long)a.D[3] * (long)a.D[3];
            var num224 = (uint)((ulong)num223 >> 32);
            var num225 = (uint)num223;
            var num226 = num216 + num225;
            var num227 = num224 + (num226 < num225 ? 1U : 0U);
            var num228 = num220 + num227;
            var num229 = num228 < num227 ? 1 : 0;
            var num230 = num222 + num229;
            l[6] = num226;
            var num231 = num228;
            var num232 = (uint)num230;
            var num233 = 0;
            var num234 = (long)a.D[0] * (long)a.D[7];
            var num235 = (uint)((ulong)num234 >> 32);
            var num236 = (uint)num234;
            var num237 = num235 + num235;
            var num238 = num237 < num235 ? 1 : 0;
            var num239 = num233 + num238;
            var num240 = num236 + num236;
            var num241 = num237 + (num240 < num236 ? 1U : 0U);
            var num242 = num231 + num240;
            var num243 = num241 + (num242 < num240 ? 1U : 0U);
            var num244 = num242 < num240 & (int)num243 == 0 ? 1 : 0;
            var num245 = num239 + num244;
            var num246 = num232 + num243;
            var num247 = num246 < num243 ? 1 : 0;
            var num248 = num245 + num247;
            var num249 = (long)a.D[1] * (long)a.D[6];
            var num250 = (uint)((ulong)num249 >> 32);
            var num251 = (uint)num249;
            var num252 = num250 + num250;
            var num253 = num252 < num250 ? 1 : 0;
            var num254 = num248 + num253;
            var num255 = num251 + num251;
            var num256 = num252 + (num255 < num251 ? 1U : 0U);
            var num257 = num242 + num255;
            var num258 = num256 + (num257 < num255 ? 1U : 0U);
            var num259 = num257 < num255 & (int)num258 == 0 ? 1 : 0;
            var num260 = num254 + num259;
            var num261 = num246 + num258;
            var num262 = num261 < num258 ? 1 : 0;
            var num263 = num260 + num262;
            var num264 = (long)a.D[2] * (long)a.D[5];
            var num265 = (uint)((ulong)num264 >> 32);
            var num266 = (uint)num264;
            var num267 = num265 + num265;
            var num268 = num267 < num265 ? 1 : 0;
            var num269 = num263 + num268;
            var num270 = num266 + num266;
            var num271 = num267 + (num270 < num266 ? 1U : 0U);
            var num272 = num257 + num270;
            var num273 = num271 + (num272 < num270 ? 1U : 0U);
            var num274 = num272 < num270 & (int)num273 == 0 ? 1 : 0;
            var num275 = num269 + num274;
            var num276 = num261 + num273;
            var num277 = num276 < num273 ? 1 : 0;
            var num278 = num275 + num277;
            var num279 = (long)a.D[3] * (long)a.D[4];
            var num280 = (uint)((ulong)num279 >> 32);
            var num281 = (uint)num279;
            var num282 = num280 + num280;
            var num283 = num282 < num280 ? 1 : 0;
            var num284 = num278 + num283;
            var num285 = num281 + num281;
            var num286 = num282 + (num285 < num281 ? 1U : 0U);
            var num287 = num272 + num285;
            var num288 = num286 + (num287 < num285 ? 1U : 0U);
            var num289 = num287 < num285 & (int)num288 == 0 ? 1 : 0;
            var num290 = num284 + num289;
            var num291 = num276 + num288;
            var num292 = num291 < num288 ? 1 : 0;
            var num293 = num290 + num292;
            l[7] = num287;
            var num294 = num291;
            var num295 = (uint)num293;
            var num296 = 0;
            var num297 = (long)a.D[1] * (long)a.D[7];
            var num298 = (uint)((ulong)num297 >> 32);
            var num299 = (uint)num297;
            var num300 = num298 + num298;
            var num301 = num300 < num298 ? 1 : 0;
            var num302 = num296 + num301;
            var num303 = num299 + num299;
            var num304 = num300 + (num303 < num299 ? 1U : 0U);
            var num305 = num294 + num303;
            var num306 = num304 + (num305 < num303 ? 1U : 0U);
            var num307 = num305 < num303 & (int)num306 == 0 ? 1 : 0;
            var num308 = num302 + num307;
            var num309 = num295 + num306;
            var num310 = num309 < num306 ? 1 : 0;
            var num311 = num308 + num310;
            var num312 = (long)a.D[2] * (long)a.D[6];
            var num313 = (uint)((ulong)num312 >> 32);
            var num314 = (uint)num312;
            var num315 = num313 + num313;
            var num316 = num315 < num313 ? 1 : 0;
            var num317 = num311 + num316;
            var num318 = num314 + num314;
            var num319 = num315 + (num318 < num314 ? 1U : 0U);
            var num320 = num305 + num318;
            var num321 = num319 + (num320 < num318 ? 1U : 0U);
            var num322 = num320 < num318 & (int)num321 == 0 ? 1 : 0;
            var num323 = num317 + num322;
            var num324 = num309 + num321;
            var num325 = num324 < num321 ? 1 : 0;
            var num326 = num323 + num325;
            var num327 = (long)a.D[3] * (long)a.D[5];
            var num328 = (uint)((ulong)num327 >> 32);
            var num329 = (uint)num327;
            var num330 = num328 + num328;
            var num331 = num330 < num328 ? 1 : 0;
            var num332 = num326 + num331;
            var num333 = num329 + num329;
            var num334 = num330 + (num333 < num329 ? 1U : 0U);
            var num335 = num320 + num333;
            var num336 = num334 + (num335 < num333 ? 1U : 0U);
            var num337 = num335 < num333 & (int)num336 == 0 ? 1 : 0;
            var num338 = num332 + num337;
            var num339 = num324 + num336;
            var num340 = num339 < num336 ? 1 : 0;
            var num341 = num338 + num340;
            var num342 = (long)a.D[4] * (long)a.D[4];
            var num343 = (uint)((ulong)num342 >> 32);
            var num344 = (uint)num342;
            var num345 = num335 + num344;
            var num346 = num343 + (num345 < num344 ? 1U : 0U);
            var num347 = num339 + num346;
            var num348 = num347 < num346 ? 1 : 0;
            var num349 = num341 + num348;
            l[8] = num345;
            var num350 = num347;
            var num351 = (uint)num349;
            var num352 = 0;
            var num353 = (long)a.D[2] * (long)a.D[7];
            var num354 = (uint)((ulong)num353 >> 32);
            var num355 = (uint)num353;
            var num356 = num354 + num354;
            var num357 = num356 < num354 ? 1 : 0;
            var num358 = num352 + num357;
            var num359 = num355 + num355;
            var num360 = num356 + (num359 < num355 ? 1U : 0U);
            var num361 = num350 + num359;
            var num362 = num360 + (num361 < num359 ? 1U : 0U);
            var num363 = num361 < num359 & (int)num362 == 0 ? 1 : 0;
            var num364 = num358 + num363;
            var num365 = num351 + num362;
            var num366 = num365 < num362 ? 1 : 0;
            var num367 = num364 + num366;
            var num368 = (long)a.D[3] * (long)a.D[6];
            var num369 = (uint)((ulong)num368 >> 32);
            var num370 = (uint)num368;
            var num371 = num369 + num369;
            var num372 = num371 < num369 ? 1 : 0;
            var num373 = num367 + num372;
            var num374 = num370 + num370;
            var num375 = num371 + (num374 < num370 ? 1U : 0U);
            var num376 = num361 + num374;
            var num377 = num375 + (num376 < num374 ? 1U : 0U);
            var num378 = num376 < num374 & (int)num377 == 0 ? 1 : 0;
            var num379 = num373 + num378;
            var num380 = num365 + num377;
            var num381 = num380 < num377 ? 1 : 0;
            var num382 = num379 + num381;
            var num383 = (long)a.D[4] * (long)a.D[5];
            var num384 = (uint)((ulong)num383 >> 32);
            var num385 = (uint)num383;
            var num386 = num384 + num384;
            var num387 = num386 < num384 ? 1 : 0;
            var num388 = num382 + num387;
            var num389 = num385 + num385;
            var num390 = num386 + (num389 < num385 ? 1U : 0U);
            var num391 = num376 + num389;
            var num392 = num390 + (num391 < num389 ? 1U : 0U);
            var num393 = num391 < num389 & (int)num392 == 0 ? 1 : 0;
            var num394 = num388 + num393;
            var num395 = num380 + num392;
            var num396 = num395 < num392 ? 1 : 0;
            var num397 = num394 + num396;
            l[9] = num391;
            var num398 = num395;
            var num399 = (uint)num397;
            var num400 = 0;
            var num401 = (long)a.D[3] * (long)a.D[7];
            var num402 = (uint)((ulong)num401 >> 32);
            var num403 = (uint)num401;
            var num404 = num402 + num402;
            var num405 = num404 < num402 ? 1 : 0;
            var num406 = num400 + num405;
            var num407 = num403 + num403;
            var num408 = num404 + (num407 < num403 ? 1U : 0U);
            var num409 = num398 + num407;
            var num410 = num408 + (num409 < num407 ? 1U : 0U);
            var num411 = num409 < num407 & (int)num410 == 0 ? 1 : 0;
            var num412 = num406 + num411;
            var num413 = num399 + num410;
            var num414 = num413 < num410 ? 1 : 0;
            var num415 = num412 + num414;
            var num416 = (long)a.D[4] * (long)a.D[6];
            var num417 = (uint)((ulong)num416 >> 32);
            var num418 = (uint)num416;
            var num419 = num417 + num417;
            var num420 = num419 < num417 ? 1 : 0;
            var num421 = num415 + num420;
            var num422 = num418 + num418;
            var num423 = num419 + (num422 < num418 ? 1U : 0U);
            var num424 = num409 + num422;
            var num425 = num423 + (num424 < num422 ? 1U : 0U);
            var num426 = num424 < num422 & (int)num425 == 0 ? 1 : 0;
            var num427 = num421 + num426;
            var num428 = num413 + num425;
            var num429 = num428 < num425 ? 1 : 0;
            var num430 = num427 + num429;
            var num431 = (long)a.D[5] * (long)a.D[5];
            var num432 = (uint)((ulong)num431 >> 32);
            var num433 = (uint)num431;
            var num434 = num424 + num433;
            var num435 = num432 + (num434 < num433 ? 1U : 0U);
            var num436 = num428 + num435;
            var num437 = num436 < num435 ? 1 : 0;
            var num438 = num430 + num437;
            l[10] = num434;
            var num439 = num436;
            var num440 = (uint)num438;
            var num441 = 0;
            var num442 = (long)a.D[4] * (long)a.D[7];
            var num443 = (uint)((ulong)num442 >> 32);
            var num444 = (uint)num442;
            var num445 = num443 + num443;
            var num446 = num445 < num443 ? 1 : 0;
            var num447 = num441 + num446;
            var num448 = num444 + num444;
            var num449 = num445 + (num448 < num444 ? 1U : 0U);
            var num450 = num439 + num448;
            var num451 = num449 + (num450 < num448 ? 1U : 0U);
            var num452 = num450 < num448 & (int)num451 == 0 ? 1 : 0;
            var num453 = num447 + num452;
            var num454 = num440 + num451;
            var num455 = num454 < num451 ? 1 : 0;
            var num456 = num453 + num455;
            var num457 = (long)a.D[5] * (long)a.D[6];
            var num458 = (uint)((ulong)num457 >> 32);
            var num459 = (uint)num457;
            var num460 = num458 + num458;
            var num461 = num460 < num458 ? 1 : 0;
            var num462 = num456 + num461;
            var num463 = num459 + num459;
            var num464 = num460 + (num463 < num459 ? 1U : 0U);
            var num465 = num450 + num463;
            var num466 = num464 + (num465 < num463 ? 1U : 0U);
            var num467 = num465 < num463 & (int)num466 == 0 ? 1 : 0;
            var num468 = num462 + num467;
            var num469 = num454 + num466;
            var num470 = num469 < num466 ? 1 : 0;
            var num471 = num468 + num470;
            l[11] = num465;
            var num472 = num469;
            var num473 = (uint)num471;
            var num474 = 0;
            var num475 = (long)a.D[5] * (long)a.D[7];
            var num476 = (uint)((ulong)num475 >> 32);
            var num477 = (uint)num475;
            var num478 = num476 + num476;
            var num479 = num478 < num476 ? 1 : 0;
            var num480 = num474 + num479;
            var num481 = num477 + num477;
            var num482 = num478 + (num481 < num477 ? 1U : 0U);
            var num483 = num472 + num481;
            var num484 = num482 + (num483 < num481 ? 1U : 0U);
            var num485 = num483 < num481 & (int)num484 == 0 ? 1 : 0;
            var num486 = num480 + num485;
            var num487 = num473 + num484;
            var num488 = num487 < num484 ? 1 : 0;
            var num489 = num486 + num488;
            var num490 = (long)a.D[6] * (long)a.D[6];
            var num491 = (uint)((ulong)num490 >> 32);
            var num492 = (uint)num490;
            var num493 = num483 + num492;
            var num494 = num491 + (num493 < num492 ? 1U : 0U);
            var num495 = num487 + num494;
            var num496 = num495 < num494 ? 1 : 0;
            var num497 = num489 + num496;
            l[12] = num493;
            var num498 = num495;
            var num499 = (uint)num497;
            var num500 = 0;
            var num501 = (long)a.D[6] * (long)a.D[7];
            var num502 = (uint)((ulong)num501 >> 32);
            var num503 = (uint)num501;
            var num504 = num502 + num502;
            var num505 = num504 < num502 ? 1 : 0;
            var num506 = num500 + num505;
            var num507 = num503 + num503;
            var num508 = num504 + (num507 < num503 ? 1U : 0U);
            var num509 = num498 + num507;
            var num510 = num508 + (num509 < num507 ? 1U : 0U);
            var num511 = num509 < num507 & (int)num510 == 0 ? 1 : 0;
            var num512 = num506 + num511;
            var num513 = num499 + num510;
            var num514 = num513 < num510 ? 1 : 0;
            var num515 = num512 + num514;
            l[13] = num509;
            var num516 = num513;
            var num517 = (uint)num515;
            var num518 = (long)a.D[7] * (long)a.D[7];
            var num519 = (uint)((ulong)num518 >> 32);
            var num520 = (uint)num518;
            var num521 = num516 + num520;
            var num522 = num519 + (num521 < num520 ? 1U : 0U);
            var num523 = num517 + num522;
            l[14] = num521;
            var num524 = num523;
            l[15] = num524;
        }
    }
}

